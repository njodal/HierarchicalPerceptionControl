general:
  name: Tests for CartPole.py

  tests:
    - test:
        call: test_control_pole_angle
        desc: parameters  pole_angle_reference, gains, debug_unit, render (True/False), debug
        cases:
          - case:
              desc:   Just keep pole upright (with Rupert Young original gains). Not always succeed.
              input:  [0.0, pct_cart_pole_at_angle.yaml, {k_p1: 3.5, k_p2: 0.5, k_p3: 2.0, k_p4: -0.05, k_p5: 4.0}, False, False]
              output: 500
          - case:
              desc:   Just keep pole in a given angle
              input:  [0.05, pct_cart_pole_at_angle.yaml, {k_p1: 4.0, k_p2: 4.0, k_p3: 2.0, k_p4: -0.05, k_p5: 4.0}, False, False]
              output: 500
          - case:
              desc:   Just keep pole in a given angle with gain from move cart
              input:  [0.0, pct_cart_pole_at_angle.yaml, {k_p1: 4.0, k_p2: 4.0, k_p3: 2.0, k_p4: -0.05, k_p5: 4.0}, False, False]
              output: 500
          - case:
              desc:   Like Rupert Young but much lower first gain, seems to work better)
              input:  [0.05, pct_cart_pole_at_angle.yaml, {k_p1: 1.0, k_p2: 0.5, k_p3: 2.0, k_p4: -0.05, k_p5: 4.0}, True, False]
              output: 500

    - test:
        call: test_move_cart1
        cases:
          - case:
              input:  [2.0, 500, pct_cart_pole_move.yaml, {}, True, False]
              output: 1000

    - test:
        call: test_move_cart
        cases:
          - case:
              input:  [1.0, 1000, [[0.3, 300.0], [3.0], [5.0], [0.2], [-0.05, 4.0]], [True, True, True, True], False, False]
              output: 1000
          - case:
              input:  [1.0, 1000, [[0.5, 267.0], [3.0], [5.0], [0.2], [-0.05, 4.0]], [True, True, True, True], False, False]
              output: 1000
          - case:
              input:  [1.0, 1000, [[1.2, 200.0], [3.5], [0.5], [2.0], [-0.05, 4.0]], [True, True, True, True], False, False]
              output: 1000
          - case:
              desc:   fine tuned by hand
              input:  [1.0, 1000, [[0.4, 1.0], [3.0], [6.0], [0.2], [-0.1, 4.0]], [True, True, True, True], False, False]
              output: 1000

    - test:
        call: test_autotune_pole_angle_first_gain
        precision: 0.5
        cases:
          - case:
              input:  [2.0, [1.0, 1.0, 1.0], [[0.5], [2.0], [-0.05, 4.0]], False, False]
              output: [3.0, 1.0, 2.5]

    - test:
        call: test_autotune_move_cart_first_gain
        precision: 0.5
        cases:
          - case:
              input:  [1.0, 1000, 1.0, 10.0, [[3.0], [5.0], [0.2], [-0.05, 4.0]], False, False]
              output: [0.3, 500]
          - case:
              input:  [1.0, 1000, 1.0, 10.0, [[3.5], [0.5], [2.0], [-0.05, 4.0]], True, False]
              output: [0.31, 1.73]
